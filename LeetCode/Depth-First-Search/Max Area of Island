int dfs(int** grid, int gridSize, int* gridColSize, int r,int c ){


    if(r<0 || r>= gridSize || c<0 || c>=*gridColSize ||  grid[r][c]!=1)          
          return 0 ;  


 grid[r][c]=-1;

  return (1+dfs(grid, gridSize, gridColSize, r+1, c)+
            dfs(grid, gridSize, gridColSize, r-1, c)+
            dfs(grid, gridSize, gridColSize, r,   c+1)+
            dfs(grid, gridSize, gridColSize, r,   c-1)
  );
}


int maxAreaOfIsland(int** grid, int gridSize, int* gridColSize){

    int r,c;
    int length=0,maxlength=0;


   for(r=0;r<gridSize;r++){
      for(c=0;c<*gridColSize;c++){
             
             if(grid[r][c]==1)
             length=dfs(grid,gridSize,gridColSize,r,c);
                    if(length>maxlength) maxlength=length;   

         }


      } 
    
   


return maxlength;

}
